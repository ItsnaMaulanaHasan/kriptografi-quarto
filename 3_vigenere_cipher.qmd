---
# title: "Kriptografi Klasik"
format: html
categories: [teori]
toc-title: "On this page"
---

# 3. Vigenere Cipher {.unnumbered}

Vigenere Cipher adalah metode enkripsi klasik yang menggunakan tabel tabula recta (atau tabel Vigenere) untuk mengenkripsi teks. Enkripsi ini menggunakan kata kunci (key) untuk menggeser setiap huruf dalam teks asli. Setiap huruf kunci mengindikasikan jumlah geseran huruf untuk huruf yang sesuai dalam teks asli.


# Analogi Vigenere Cipher
Misalnya, jika kita memiliki teks "HELLO" dan kunci "KEY", kita akan menggeser huruf-huruf dalam teks "HELLO" sesuai dengan urutan huruf dalam kata kunci "KEY". 

1. **Susunan Awal:**
   - Plaintext/Pesan : "HELLO"
   - Key/Kunci       :  "KEY"
   - Ciphertext/Hasil Enkripsi : ?

2. **Enkripsi Caesar Cipher:**
   - Contoh Proses Enkripsi <br>
    Prosesnya adalah sebagai berikut dengan: <br>
    1. H (teks)(8) + K (kunci)(11) = S(19) <br>
    2. E (teks)(5) + E (kunci)(5) = J(10) <br>
    3. L (teks)(12) + Y (kunci)(25) = K(37-26)=11 <br>
    4. L (teks)(12) + K (kunci)(11)= W(23) <br>
    5. O (teks)(15) + E (kunci)(5) = T(20) <br>
    
3. **Susunan Setelah Enkripsi:** <br>
    Teks asli          :  H   E   L   L   O <br>
    Kunci              :  K   E   Y   K   E <br>
    Hasil Enkripsi     :  S   J   K   W   T <br>
    Setiap huruf dalam teks asli digeser sesuai dengan huruf dalam kunci untuk menghasilkan teks terenkripsi. <br>
    Sehingga hasil enkripsi dari "HELLO" dengan kunci "KEY" adalah "SJKWT".


# Contoh Soal
Berikut ini adalah contoh input pesan "udinus24" yang akan dienkripsi menggunakan metode vigenere cipher kolom dengan kunci "key" Maka proses enkripsi nya adalah sebagai berikut:

## Implementasi Pada Python

LANGKAH 1 : <br>
Deklarasi kamus (dictionary) abjad -> Kamus ini memetakan setiap huruf alfabet ke sebuah indeks numerik.
```python
abjad = {
    'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5,
    'F': 6, 'G': 7, 'H': 8, 'I': 9, 'J': 10,
    'K': 11, 'L': 12, 'M': 13, 'N': 14, 'O': 15,
    'P': 16, 'Q': 17, 'R': 18, 'S': 19, 'T': 20,
    'U': 21, 'V': 22, 'W': 23, 'X': 24, 'Y': 25, 'Z': 26
}
```

LANGKAH 2 : <br>
Masukkan Plaintext dan Kunci

```python
# Input teks asli dan kunci
teks = input("Masukkan Plaintext : ")
kunci = "key"
teks = teks.upper()
kunci = kunci.upper()
```

```python
Masukkan Plaintext : udinus24
```
### Proses Enkripsi
LANGKAH 3 : <br>
Melakukan Enkripsi

```python
# Inisialisasi variabel hasil
pesan_terenkripsi = ''
panjang_kunci = len(kunci)
indeks_kunci = 0

# Iterasi melalui setiap karakter di teks asli
for huruf in teks:
    # Periksa apakah karakter adalah huruf alfabet
    if huruf in abjad:
        # Temukan indeks dari teks asli dan kunci
        indeks_teks = abjad[huruf]
        huruf_kunci = kunci[indeks_kunci % panjang_kunci]
        indeks_huruf_kunci = abjad[huruf_kunci]

        # Hitung indeks hasil menggunakan rumus Vigenere cipher
        indeks_hasil = (indeks_teks + indeks_huruf_kunci - 1) % 26 + 1

        # Temukan karakter hasil berdasarkan indeks
        for k, v in abjad.items():
            if v == indeks_hasil:
                pesan_terenkripsi += k
                break

        # Pindah ke karakter berikutnya dalam kunci
        indeks_kunci += 1
    else:
        # Jika karakter bukan alfabet, tambahkan tanpa perubahan
        pesan_terenkripsi += huruf
```

CETAK HASIL ENKRIPSI : <br>
```python
teks_per_huruf = ', '.join(f"'{char}'" for char in teks)
# Menyusun kunci berulang sesuai panjang teks asli
kunci_berulang = (kunci * (len(teks) // panjang_kunci)) + kunci[:len(teks) % panjang_kunci]
kunci_per_huruf = ', '.join(f"'{char}'" for char in kunci_berulang)
# output
hasil_encrypt = ', '.join(f"'{char}'" for char in pesan_terenkripsi)

print(f"Plaintext     : {teks_per_huruf}")
print("")
print(f"Kunci         : {kunci_per_huruf}")
print("")
print(f"Hasil Encrypt : {hasil_encrypt}")
```
```python
Plaintext     : 'U', 'D', 'I', 'N', 'U', 'S', '2', '4' 
Kunci         : 'K', 'E', 'Y', 'K', 'E', 'Y', 'K', 'E' 
Hasil Encrypt : 'F', 'I', 'H', 'Y', 'Z', 'R', '2', '4' 
```


### Proses Dekripsi
LANGKAH 4 : <br> 
Melakukan Dekripsi
```python
# Inisialisasi variabel hasil
pesan_terdekripsi = ''
panjang_kunci = len(kunci)
indeks_kunci = 0

# Iterasi melalui setiap karakter di teks asli
for huruf in pesan_terenkripsi:
    # Periksa apakah karakter adalah huruf alfabet
    if huruf in abjad:
        # Temukan indeks dari teks asli dan kunci
        indeks_teks = abjad[huruf]
        huruf_kunci = kunci[indeks_kunci % panjang_kunci]
        indeks_huruf_kunci = abjad[huruf_kunci]

        # Hitung indeks hasil menggunakan rumus Vigenere cipher
        indeks_hasil = (indeks_teks - indeks_huruf_kunci - 1) % 26 + 1

        # Temukan karakter hasil berdasarkan indeks
        for k, v in abjad.items():
            if v == indeks_hasil:
                pesan_terdekripsi += k
                break

        # Pindah ke karakter berikutnya dalam kunci
        indeks_kunci += 1
    else:
        # Jika karakter bukan alfabet, tambahkan tanpa perubahan
        pesan_terdekripsi += huruf
```
CETAK HASIL DEKRIPSI : <br>
```python
hasil_decrypt = ', '.join(f"'{char}'" for char in pesan_terdekripsi)
print(f"Ciphertext    : {hasil_encrypt}")
print("")
print(f"Kunci         : {kunci_per_huruf}")
print("")
print(f"Hasil Decrypt : {hasil_decrypt}")
```

```python
Ciphertext    : 'F', 'I', 'H', 'Y', 'Z', 'R', '2', '4'
Kunci         : 'K', 'E', 'Y', 'K', 'E', 'Y', 'K', 'E'
Hasil Decrypt : 'U', 'D', 'I', 'N', 'U', 'S', '2', '4'
```

